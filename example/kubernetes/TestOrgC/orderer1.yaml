---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testorgcorderer1-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testorgcorderer1-deployment
  template:
    metadata:
      labels:
        app: testorgcorderer1-deployment
    spec:
      restartPolicy: Always
      containers:
        - name: testorgcorderer1
          image: hyperledger/fabric-orderer:2.2.4
          imagePullPolicy: Never
          env:
            - name: FABRIC_LOGGING_SPEC
              value: "INFO"
            - name: ORDERER_GENERAL_LISTENADDRESS
              value: "0.0.0.0"
            - name: ORDERER_GENERAL_LISTENPORT
              value: "7050"
            - name: ORDERER_GENERAL_GENESISMETHOD
              value: "file"
            - name: ORDERER_GENERAL_GENESISFILE
              value: "/var/crypto-config/genesis.block"
            - name: ORDERER_GENERAL_LOCALMSPID
              value: "GXNU"
            - name: ORDERER_GENERAL_LOCALMSPDIR
              value: "/var/crypto-config/msp"
            - name: ORDERER_GENERAL_TLS_ENABLED
              value: "true"
            - name: ORDERER_GENERAL_TLS_CLIENTAUTHREQUIRED
              value: "false"
            - name: ORDERER_GENERAL_TLS_PRIVATEKEY
              value: "/var/crypto-config/tls/server.key"
            - name: ORDERER_GENERAL_TLS_CERTIFICATE
              value: "/var/crypto-config/tls/server.crt"
            - name: ORDERER_GENERAL_TLS_ROOTCAS
              value: "[/var/crypto-config/tls/ca.crt]"
            - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
              value: "/var/crypto-config/tls/server.crt"
            - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
              value: "/var/crypto-config/tls/server.key"
            - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
              value: "[/var/crypto-config/tls/ca.crt]"
          workingDir: /opt/gopath/src/github.com/hyperledger/fabric
          volumeMounts:
            - mountPath: /var/crypto-config
              name: crypto-config
            - mountPath: /var/hyperledger/production/orderer
              name: production
          command:
            - "sh"
          args:
            - "-c"
            - "sleep 15; orderer;"
          ports:
            - containerPort: 7050
      volumes:
        - name: crypto-config
          emptyDir: { }
        - name: production
          emptyDir: { }
      nodeSelector:
        "kubernetes.io/hostname": "kubenode2"

---
apiVersion: v1
kind: Service
metadata:
  name: testorgcorderer1
spec:
  selector:
    app: testorgcorderer1-deployment
  type: NodePort
  ports:
    - port: 7050
      targetPort: 7050
      nodePort: 30507